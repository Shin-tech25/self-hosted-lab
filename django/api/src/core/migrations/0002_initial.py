# Generated by Django 5.2.7 on 2025-10-08 04:49

import core.utils.magic
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('core', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Account',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('account_id', models.CharField(db_index=True, max_length=64, unique=True)),
                ('broker', models.CharField(choices=[('OANDA', 'OANDA'), ('XM', 'XM')], default='XM', max_length=16)),
                ('name', models.CharField(blank=True, max_length=64)),
                ('server', models.CharField(blank=True, max_length=64)),
                ('is_active', models.BooleanField(default=True)),
                ('note', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['-is_active', 'broker', 'account_id'],
            },
        ),
        migrations.CreateModel(
            name='AccountDailyStat',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('date', models.DateField(db_index=True)),
                ('balance', models.DecimalField(decimal_places=2, max_digits=18)),
                ('equity', models.DecimalField(decimal_places=2, max_digits=18)),
                ('pnl', models.DecimalField(decimal_places=2, max_digits=18)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='daily_stats', to='core.account')),
            ],
            options={
                'db_table': 'account_daily_stats',
                'ordering': ['-date'],
                'unique_together': {('account', 'date')},
            },
        ),
        migrations.CreateModel(
            name='ClosedPosition',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('ticket', models.BigIntegerField(db_index=True, default=0)),
                ('symbol', models.CharField(max_length=20)),
                ('side', models.CharField(choices=[('BUY', 'Buy'), ('SELL', 'Sell')], max_length=4)),
                ('open_price', models.DecimalField(decimal_places=5, max_digits=18)),
                ('close_price', models.DecimalField(decimal_places=5, max_digits=18)),
                ('volume', models.DecimalField(decimal_places=2, max_digits=12)),
                ('open_time', models.DateTimeField()),
                ('close_time', models.DateTimeField(db_index=True)),
                ('profit', models.DecimalField(decimal_places=2, max_digits=18)),
                ('commission', models.DecimalField(decimal_places=2, default=0, max_digits=18)),
                ('swap', models.DecimalField(decimal_places=2, default=0, max_digits=18)),
                ('magic', models.BigIntegerField(blank=True, db_index=True, null=True)),
                ('comment', models.CharField(blank=True, max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='closed_positions', to='core.account')),
            ],
            options={
                'db_table': 'closed_positions',
                'ordering': ['-close_time', '-id'],
                'indexes': [models.Index(fields=['account', 'close_time', 'ticket'], name='closed_posi_account_c3a7df_idx'), models.Index(fields=['account', 'symbol', 'close_time'], name='closed_posi_account_5d45fa_idx'), models.Index(fields=['magic'], name='closed_posi_magic_ad934c_idx')],
                'constraints': [models.UniqueConstraint(fields=('account', 'ticket'), name='uniq_closedpos_account_ticket')],
            },
        ),
        migrations.CreateModel(
            name='PhantomJob',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('magic', models.BigIntegerField(db_index=True, default=core.utils.magic.generate_magic, unique=True)),
                ('symbol', models.CharField(choices=[('USDJPY', 'USDJPY'), ('EURUSD', 'EURUSD'), ('EURJPY', 'EURJPY'), ('GBPJPY', 'GBPJPY'), ('GBPUSD', 'GBPUSD'), ('AUDJPY', 'AUDJPY'), ('EURGBP', 'EURGBP'), ('USDCHF', 'USDCHF'), ('USDJPY#', 'USDJPY#'), ('EURUSD#', 'EURUSD#'), ('EURJPY#', 'EURJPY#'), ('GBPJPY#', 'GBPJPY#'), ('GBPUSD#', 'GBPUSD#'), ('AUDJPY#', 'AUDJPY#'), ('EURGBP#', 'EURGBP#'), ('USDCHF#', 'USDCHF#')], db_index=True, default='USDJPY', max_length=32)),
                ('side', models.CharField(choices=[('BUY', 'Buy'), ('SELL', 'Sell')], default='BUY', max_length=4)),
                ('sl_price', models.FloatField(blank=True, null=True)),
                ('tp_price', models.FloatField(blank=True, null=True)),
                ('use_risk_lot', models.BooleanField(default=True)),
                ('risk_percent', models.FloatField(default=2.0)),
                ('lots_fixed', models.FloatField(default=0.1)),
                ('max_lot_cap', models.FloatField(default=10.0)),
                ('slippage', models.IntegerField(default=3)),
                ('tol_price_pips', models.FloatField(default=2.5)),
                ('cooldown_sec', models.IntegerField(default=8)),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('RUNNING', 'Running'), ('COMPLETED', 'Completed'), ('ERROR', 'Error')], db_index=True, default='PENDING', max_length=12)),
                ('started_at', models.DateTimeField(blank=True, null=True)),
                ('finished_at', models.DateTimeField(blank=True, null=True)),
                ('error_detail', models.TextField(blank=True, null=True)),
                ('failed_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('account', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='phantom_jobs', to='core.account')),
            ],
            options={
                'constraints': [models.CheckConstraint(condition=models.Q(models.Q(('status', 'PENDING'), ('started_at__isnull', True), ('finished_at__isnull', True)), models.Q(('status', 'PENDING'), _negated=True), _connector='OR'), name='phantomjob_pending_requires_null_times')],
            },
        ),
    ]
