{"version":3,"file":"files_mindmap-mindmapviewer.mjs","sources":["../src/views/MindMap.vue","../src/mindmapviewer.js"],"sourcesContent":["<template>\n\t<iframe ref=\"iframe\"\n\t:src=\"iframeSrc\"\n\t@load=\"onIFrameLoaded\" ></iframe>\n</template>\n\n<script>\n//import { showError } from '@nextcloud/dialogs'\nimport { getLanguage } from '@nextcloud/l10n'\nimport { generateUrl } from '@nextcloud/router'\nimport { getSharingToken, isPublicShare } from '@nextcloud/sharing/public'\n\nconst IS_PUBLIC = isPublicShare();\n\nconsole.debug('MindMap Vue Loading');\n\nexport default {\n\tname: 'MindMap',\n\n    computed: {\n\t\tiframeSrc() {\n\t\t\tconsole.log('iframeSrc', this.file, this.source, this.davPath);\n\t\t\treturn generateUrl('/apps/files_mindmap/?file={file}', {\n\t\t\t\tfile: this.source ?? this.davPath,\n\t\t\t})\n\t\t},\n\n\t\tfile() {\n\t\t\t// fileList and fileid are provided by the Mime mixin of the Viewer.\n\t\t\tlet file = this.fileList.find((file) => file.fileid === this.fileid);\n\t\t\treturn file;\n\t\t},\n\n\t\tisEditable() {\n\t\t\treturn this.file?.permissions?.indexOf('W') >= 0\n\t\t},\n\t},\n\n    async mounted() {\n\t\tdocument.addEventListener('webviewerloaded', this.handleWebviewerloaded)\n\t\tconsole.log('mounted file: ', this.file);\n\t\tOCA.FilesMindMap.setFile(this.file);\n\n\t\tthis.doneLoading();\n\t\tthis.$nextTick(function() {\n\t\t\tthis.$el?.focus()\n\t\t})\n\t},\n\n\tbeforeCreate() {\n\n\t},\n\n    beforeDestroy() {\n\t\tdocument.removeEventListener('webviewerloaded', this.handleWebviewerloaded)\n\t},\n\n\tmethods: {\n\t\tonIFrameLoaded() {\n            console.log('File:', this.file);\n\t\t\tlet athis = this;\n\n\t\t\t// if (this.isEditable) {\n\t\t\t\t// this.$nextTick(() => {\n\t\t\t\t// \tathis.getDownloadElement().removeAttribute('hidden')\n\t\t\t\t// \tathis.getEditorModeButtonsElement().removeAttribute('hidden')\n\t\t\t\t// })\n\t\t\t// }\n\t\t},\n\n\t\tgetIframeDocument() {\n\t\t\t// $refs are not reactive, so a method is used instead of a computed\n\t\t\t// property for clarity.\n\t\t\treturn this.$refs.iframe.contentDocument\n\t\t}\n\t}\n}\n</script>\n\n<style lang=\"scss\" scoped>\niframe {\n\twidth: 100%;\n\theight: calc(100vh - var(--header-height));\n\tmargin-top: var(--header-height);\n\tposition: absolute;\n}\n</style>","import MindMap from './views/MindMap.vue'\nimport FilesMindMap from './mindmap'\n\nOCA.FilesMindMap = FilesMindMap;\n\nFilesMindMap.init();\nFilesMindMap.registerNewFileMenuPlugin();\nFilesMindMap.registerFileActions();\n\n\nconst supportedMimes = OCA.FilesMindMap.getSupportedMimetypes();\n\nif (OCA.Viewer) {\n\tOCA.Viewer.registerHandler({\n\t\tid: 'mindmap',\n\t\tgroup: null,\n\t\tmimes: supportedMimes,\n\t\tcomponent: MindMap,\n\t\ttheme: 'default',\n\t\tcanCompare: true,\n\t});\n}\n"],"names":["isPublicShare","_sfc_main","generateUrl","file","FilesMindMap","supportedMimes","MindMap"],"mappings":";wOAYAA,EAAA,EAEA,QAAA,MAAA,qBAAA,EAEA,MAAAC,EAAA,CACA,KAAA,UAEA,SAAA,CACA,WAAA,CACA,OAAA,QAAA,IAAA,YAAA,KAAA,KAAA,KAAA,OAAA,KAAA,OAAA,EACAC,EAAA,mCAAA,CACA,KAAA,KAAA,QAAA,KAAA,OACA,CAAA,CACA,EAEA,MAAA,CAGA,OADA,KAAA,SAAA,KAAAC,GAAAA,EAAA,SAAA,KAAA,MAAA,CAEA,EAEA,YAAA,CACA,OAAA,KAAA,MAAA,aAAA,QAAA,GAAA,GAAA,CACA,CACA,EAEA,MAAA,SAAA,CACA,SAAA,iBAAA,kBAAA,KAAA,qBAAA,EACA,QAAA,IAAA,iBAAA,KAAA,IAAA,EACA,IAAA,aAAA,QAAA,KAAA,IAAA,EAEA,KAAA,YAAA,EACA,KAAA,UAAA,UAAA,CACA,KAAA,KAAA,MAAA,CACA,CAAA,CACA,EAEA,cAAA,CAEA,EAEA,eAAA,CACA,SAAA,oBAAA,kBAAA,KAAA,qBAAA,CACA,EAEA,QAAA,CACA,gBAAA,CACA,QAAA,IAAA,QAAA,KAAA,IAAA,CASA,EAEA,mBAAA,CAGA,OAAA,KAAA,MAAA,OAAA,eACA,CACA,CACA,sLCzEA,IAAI,aAAeC,EAEnBA,EAAa,KAAM,EACnBA,EAAa,0BAA2B,EACxCA,EAAa,oBAAqB,EAGlC,MAAMC,EAAiB,IAAI,aAAa,sBAAuB,EAE3D,IAAI,QACP,IAAI,OAAO,gBAAgB,CAC1B,GAAI,UACJ,MAAO,KACP,MAAOA,EACP,UAAWC,EACX,MAAO,UACP,WAAY,EACd,CAAE"}